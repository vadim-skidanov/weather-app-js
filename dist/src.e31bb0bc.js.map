{"version":3,"sources":["js/apiConfig/apiConfig.js","js/apiFetchData/apiFetchData.js","js/utils/debounce.js","js/date/date.js","js/components/searchResult.js","js/searchBar/searchBar.js","index.js"],"names":["ApiConfig","api","key","units","fetchData","query","apiConfig","res","fetch","ok","data","json","Error","e","debounce","func","delay","timeoutId","args","clearTimeout","setTimeout","apply","d","Date","daysOfWeek","months","date","month","getMonth","getDate","day","getDay","displayData","cityForecastData","tempParent","document","querySelector","innerHTML","dateConfig","temp","Math","round","main","weatherDescription","weather","description","city","name","country","sys","icon","searchBar","searchInput","onInput","searchResult","target","value","addEventListener"],"mappings":";;AMAA;;;;ANAA,AGAA,MHAMA,AGAAsB,CAAC,GAAG,IAAIC,CHAC,GAAG,AGAR,EAAV;AHCEtB,ACDF,AGAA,ADEA,AEFA,AHAA,EFCEA,GAAG,CGCCuB,ADFAV,CFCC,OEDO,ECEE,CDFC,CAACC,CCEC,CAAC,EDFH,EAAOC,CCEL,EAAQ,EDFE,GCEV,ADFa,ECEE,EDFjB,GCEE,EAAsB,ADFA,KCEtB,EAA6B,KAA7B,EAAoC,CHFrC,IGEC,EAA2C,KAA3C,CAAnB;AHAEd,AGEF,ADHE,EFCAA,GAAG,CGECuB,ADHAR,CFCC,KGEK,GAAG,ADHb,CCIA,KADa,EAEb,KAFa,EAGb,KAHa,EAIb,IHRgB,CGIH,EAKb,KALa,EAMb,KANa,EAOb,KAPa,EAQb,KARa,EASb,KATa,EAUb,KAVa,EAWb,KAXa,EAYb,KAZa,CAAf;AHDEd,AGgBF,AElBA,AHCE,EFCAA,IGgBIuB,CHhBC,EAAE,AEDA,CCiBC,ADjBA,GCiBG,ADjBAR,IAAJ,KAAa;AFFJ,AGoBhBS,ADjBE,CFHJ,CGoBEA,KAAK,CDjBCV,CCiBCQ,MAAM,CAACH,CAAC,ADjBb,CCiBcM,CDjBCT,OCiBH,EAAD,CADF,EDhBkB,CAACF,SAAD,CAAZ;ADDZ,AGAA,ADmBLS,AEnBF,AHEIT,ECiBFS,EDjBET,EDFSb,AGAA4B,ADmBP,EAAEV,CAAC,CAACO,GDjBG,EFEE7B,ACJO,CCENoB,CEFQ,ADmBhB,CFnBiB,CEiBZ,CCjBc,IHAKf,EGAE4B,AFER,CAAC,EDFF,IAAiB,ACET,SEFN,IAA4B;AHCrD,AGAA,ADmBAH,ADjBIf,ECiBJe,GAAG,CDjBCf,CCiBCS,CFnBC,AGAAU,EFEE,CAACb,KAAL,CCiBW,ADjBA,CEFC,ADmBAC,CAAC,CAACS,CCnBCI,AFEf,EAAiBjB,GCiBL,CDjBZ,CCiBW,CCnBY,CAACkB,aAAT,CAAuB,UAAvB,CAAnB;AHAQnC,AEgBG,ADbR,CCaL,GFhBUA,CCCgB,EDDlB,ACGDe,KAFmB,CAAtB;ADDWd,AGEb,AFEC,GALD,CDCaA,EGET+B,CHFE,QEsBOP,OCpBO,KAAK,IAAzB,EAA+B;AHFbvB,AGGhB+B,ACFJ,AHIC,CARD,GDGoB/B,AGGhB+B,ECFEiB,QDEQ,CAACd,ACFA,GAAG,MDEd,ACFoB,GDEI;AHHpB,AGIR,ACFE,MJF4B/B,EIEtB8C,WAAW,GAAGjB,EJFpB,MIE4B,CAACC,aAAT,CAAuB,gBAAvB,CAApB;ADGF,KAFI,UFIWtB;ADLb,AGIE,ACHF,MJDI,EICEuC,OAAO,GAAG,MAAOxC,CAAP,IAAa;AJA3B,AGID,ACHC,UJDMN,AICA+C,GJDG,GAAG,MAAM9C,AICA,GAAG,EJDE,CAAE,GAAEP,AICA,GJDI,MAAKI,KAAM,UAASF,KAAM,AICpBU,CAAC,CAAC0C,MAAF,CAASC,CJDoBtD,GAAI,CIC3C,CJDJ,AICvB,CJDA;AIEA,mCAAYoD,YAAZ;AJAA,AGIF,ACHC,GAHD,KJEM/C,AGIA,GHJG,CAACE,EAAR,EAAY;AACV,AGGIkB,IAAAA,KAAF,GHHIjB,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAnB;AAEA,AGCWe,ACFf0B,EAAAA,EDEe1B,IAAT,KHDKhB,AIDA,CAAC+C,GJCR,aIDJ,CAA6B,OAA7B,EAAsC,uBAASJ,OAAT,EAAkB,GAAlB,CAAtC;AJEG,AGAkBvB,ACDtB,CAPD,GDQuBA;AAAf,MAAuBQ,aAA7B;AHCE,AGCF,ACDFa,QDCQZ,CCDC,CJAC3B,EGCE,GHDG,AGCA4B,CHDC,GGCG,CAACC,KAAL,CAAWR,MHDX,CAAX,SGCsC,CAACS,IAAjB,CAAsBH,IAAjC,CAAb;AHAC,AGCD,GHVA,CASE,IGCII,GHDG9B,CAAP,EAAU,CICCsC,WDAW,GAAGlB,gBAAgB,CAACW,OAAjB,CAAyB,CAAzB,EAA4BC,WAAvD;AHAE,AGCF,QAAMC,GHDG,CGCC,GHDR,AGCWb,gBAAgB,CAACc,IAA9B;AHAC,AGCD,QAAMC,OAAO,GAAGf,gBAAgB,CAACgB,GAAjB,CAAqBD,OAArC;AHAD,AGCC,CHhBK,OGgBCE,IAAI,GAAI,mCAAkCjB,gBAAgB,CAACW,OAAjB,CAAyB,CAAzB,EAA4BM,IAAK,MAAjF;AAEAhB,EAAAA,UAAU,CAACG,SAAX,GAAwB;AAC1B;AACA;AACA;AACA,0CAA0CE,IAAK;AAC/C,iDAAiDI,kBAAmB;AACpE,8CAA8CG,IAAK,KAAIE,OAAQ;AAC/D;AACA;AACA,oBAAoBE,IAAK;AACzB;AACA;AACA,2CAA2CvB,KAAM;AACjD,0CAA0CD,IAAK;AAC/C,6CAA6CI,GAAI;AACjD;AACA;AACA;AACA,GAlBE;AAmBD,CArCM,EAsCP;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"src.e31bb0bc.js","sourceRoot":"../src","sourcesContent":["const ApiConfig = {\n  api: \"https://api.openweathermap.org/data/2.5/weather\",\n  key: \"6d437af60d95ce61bbf6059e8904d4d8\",\n  units: \"metric\",\n};\n\nexport default ApiConfig;\n","import apiConfig from \"../apiConfig/apiConfig\";\n\nexport const fetchData = async (query) => {\n  const { api, key, units } = apiConfig;\n\n  try {\n    const res = await fetch(`${api}?q=${query}&units=${units}&appid=${key}`);\n\n    if (res.ok) {\n      const data = await res.json();\n\n      return data;\n    }\n    throw Error(\"City not found\");\n  } catch (e) {\n    return null;\n  }\n};\n","const debounce = (func, delay = 1000) => {\n  let timeoutId;\n  return (...args) => {\n    if (timeoutId) clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => {\n      func.apply(null, args);\n    }, delay);\n  };\n};\n\nexport default debounce;\n","const d = new Date();\n\nconst daysOfWeek = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\n\nconst months = [\n  \"jan\",\n  \"feb\",\n  \"mar\",\n  \"apr\",\n  \"may\",\n  \"jun\",\n  \"jul\",\n  \"aug\",\n  \"sep\",\n  \"oct\",\n  \"nov\",\n  \"dec\",\n];\n\nconst date = {\n  month: months[d.getMonth()],\n  date: d.getDate(),\n  day: daysOfWeek[d.getDay()],\n};\n\nexport default date;\n","import dateConfig from \"../date/date\";\n\nexport const displayData = async (cityForecastData) => {\n  const tempParent = document.querySelector(\".content\");\n\n  if (cityForecastData === null) {\n    tempParent.innerHTML = `\n      <div class=\"nothing\">Search for a city</div>\n    `;\n    return;\n  }\n\n  const { month, date, day } = dateConfig;\n\n  const temp = Math.round(cityForecastData.main.temp);\n  const weatherDescription = cityForecastData.weather[0].description;\n  const city = cityForecastData.name;\n  const country = cityForecastData.sys.country;\n  const icon = `http://openweathermap.org/img/w/${cityForecastData.weather[0].icon}.png`;\n\n  tempParent.innerHTML = `\n  <div class=\"row\">\n    <div class=\"weather\">\n      <div class=\"weather__data\">\n        <div class=\"weather__data-temp\">${temp}&deg;</div>\n        <div class=\"weather__data-description\">${weatherDescription}</div>\n        <div class=\"weather__data-location\">${city}, ${country}</div>\n      </div>\n      <div class=\"weather__icon\">\n        <img src=\"${icon}\" alt=\"\" class=\"weather__icon-content\"></img>\n      </div>\n      <div class=\"weather__date\">\n        <div class=\"weather__date-month\">${month}</div>\n        <div class=\"weather__date-date\">${date}</div>\n        <div class=\"weather__date-weekday\">${day}</div>\n      </div>\n    </div>\n  </div>\n  `;\n};\n//   iconParent.innerHTML = `<img src=\"${icon}\" alt=\"\" class=\"weather__icon-content\"></img>`;\n\n//   dateParent.innerHTML = `\n//     <div class=\"weather__date-month\">${month}</div>\n//     <div class=\"weather__date-date\">${date}</div>\n//     <div class=\"weather__date-weekday\">${day}</div>\n//     `;\n// };\n\n//  <div class=\"row\">\n//  <div class=\"weather\">\n//    <div class=\"weather__data\">\n//      <!-- weather data is here -->\n//     </div>\n//    <div class=\"weather__icon\">\n//      <!-- icon is here -->\n//    </div>\n//    <div class=\"weather__date\">\n//      <!-- date is here -->\n//    </div>\n//  </div>\n// </div>\n","import { fetchData } from \"../apiFetchData/apiFetchData\";\nimport debounce from \"../utils/debounce\";\nimport { displayData } from \"../components/searchResult\";\n\nconst searchBar = () => {\n  const searchInput = document.querySelector(\".search__input\");\n  const onInput = async (e) => {\n    const searchResult = await fetchData(e.target.value);\n    displayData(searchResult);\n  };\n  searchInput.addEventListener(\"input\", debounce(onInput, 500));\n};\n\nsearchBar();\n\nexport default searchBar;\n","import searchBar from \"./js/searchBar/searchBar\";\n"]}