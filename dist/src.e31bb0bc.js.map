{"version":3,"sources":["js/apiConfig/apiConfig.js","js/apiFetchData/apiFetchData.js","js/utils/debounce.js","js/date/date.js","js/components/searchResult.js","js/searchBar/searchBar.js","index.js"],"names":["ApiConfig","api","key","units","fetchData","query","apiConfig","res","fetch","ok","data","json","Error","e","debounce","func","delay","timeoutId","args","clearTimeout","setTimeout","apply","d","Date","daysOfWeek","months","date","month","getMonth","getDate","day","getDay","renderEmptyList","el","innerHTML","displayData","cityForecastData","root","document","querySelector","dateConfig","temp","Math","round","main","weatherDescription","weather","description","city","name","country","sys","icon","wind","speed","searchBar","searchInput","onInput","searchResult","target","value","addEventListener"],"mappings":";;AMAA;;;;ANAA,AGAA,MHAMA,AGAAsB,CAAC,GAAG,IAAIC,CHAC,GAAG,AGAR,EAAV;AHCEtB,ACDF,AGAA,ADEA,AEFA,AHAA,EFCEA,GAAG,CGCCuB,ADFAV,CFCC,OEDO,ECEE,CDFC,CAACC,CCEC,CAAC,EDFH,EAAOC,CCEL,EAAQ,EDFE,GCEV,ADFa,ECEE,EDFjB,GCEE,EAAsB,ADFA,KCEtB,EAA6B,KAA7B,EAAoC,CHFrC,IGEC,EAA2C,KAA3C,CAAnB;AHAEd,AGEF,ADHE,EFCAA,GAAG,CGECuB,ADHAR,CFCC,KGEK,GAAG,ADHb,CCIA,KADa,EAEb,KAFa,EAGb,KAHa,EAIb,IHRgB,CGIH,EAKb,KALa,EAMb,KANa,EAOb,KAPa,EAQb,KARa,EASb,KATa,EAUb,KAVa,EAWb,KAXa,EAYb,KAZa,CAAf;AHDEd,AGgBF,AElBA,AHCE,EFCAA,IGgBIuB,CHhBC,EAAE,AEDA,CCiBC,ADjBA,GCiBG,ADjBAR,IAAJ,KAAa;AFFJ,AGoBhBS,ADjBE,CFHJ,CGoBEA,KAAK,CDjBCV,CCiBCQ,MAAM,CAACH,CAAC,ADjBb,CCiBcM,CDjBCT,OCiBH,EAAD,CADF,EDhBkB,CAACF,SAAD,CAAZ;ADDZ,AGAP,ADmBES,AEnBF,AHEIT,ECiBFS,EDjBET,EDFSb,AGAP4B,ADmBA,EAAEV,CAAC,CAACO,GDjBG,EFEE7B,ACJO,CCENoB,CCiBR,CFnBiB,CEiBZ,ECjBQ,GHAWf,AGAP4B,EAAD,AFEE,CAAC,EDFF,CGAO,GHAU,ACET;ADD/B,AGAAA,ADmBAH,ADjBIf,EEFJkB,ADmBAH,ECnBE,CAACI,ADmBA,CDjBCnB,CCiBCS,CFnBC,ECEE,CAACH,GEFT,EFEI,CEFY,ADmBD,ADjBA,CCiBCC,CAAC,CAACS,CDjBd,EAAiBb,GCiBL,CDjBZ,CCiBW;AFnBPjB,AGCV,ADea,ADbR,CCaL,GFhBUA,CCCgB,EDDlB,ACGDe,KAFmB,CAAtB;ADDWd,AGEf,AFEG,CEJD,EFDA,CDCaA,GAAP,QEsBOwB;AFtBKvB,AGGnB,ACFD,AHIC,CEND,AFFA,GDGoBA,EICdoD,SAAS,GAAG,MAAM;AJDhB,AIEN,MJF4BjD,EIEtBkD,WAAW,GAAGlB,EJFpB,MIE4B,CAACC,aAAT,CAAuB,gBAAvB,CAApB;ADGK,MAAMJ,SFEErB,EEFS,GAAG,OAAOsB,gBAAgB,GAAG,IAA1B,KAAmC;AHH5D,AGIA,ACHA,MJDI,EGIEC,ACHAoB,IDGI,GAAGnB,ACHA,GAAG,KDGK,CAACC,ACHC1B,CAAP,IAAa,QDGhB,CAAuB,UAAvB,CAAb;AHHE,AICA,UJDMN,AICAmD,GJDG,GAAG,MAAMlD,AICA,GAAG,EJDE,CAAE,GAAEP,AICA,GJDI,MAAKI,KAAM,UAASF,KAAM,AICpBU,CAAC,CAAC8C,MAAF,CAASC,CJDoB1D,GAAI,CIC3C,CJDJ,AICvB,CJDA;AGKF,ACHE,MDGEkC,gBAAgB,KAAK,IAAzB,EAA+B,ECHjBsB,YAAZ;AJAA,AGIA1B,ACHD,GAHD,CDMEA,IHJIzB,GAAG,CAACE,EAAR,EAAY,GGIG,CAAC4B,IAAD,CAAf;AHHE,AGIF,YHJQ3B,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAnB;AAEA,AGGH,ACJD6C,EAAAA,WJCW9C,AIDA,CAACmD,GJCR,aIDJ,CAA6B,OAA7B,EAAsC,uBAASJ,OAAT,EAAkB,GAAlB,CAAtC;AJEG,AIDJ,CAPD;ADYE,QAAM;AHHJ,AGGM9B,ACHV,IDGUA,KAAF,CHHEf,KAAK,CAAC,gBAAD,CAAX;AACD,AGEcc,ACFjB6B,GJTE,CASE,AGEa7B,IAAT,CCFC,EJAEb,CAAP,EAAU;AACV,AGCmBiB,IAAAA,OHDZ,IAAP,AICWyB;AJAZ,AGAK,MAAuBf,aAA7B;AHCD,AGCC,CHhBK,OGgBCC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWP,gBAAgB,CAACQ,IAAjB,CAAsBH,IAAjC,CAAb;AACA,QAAMI,kBAAkB,GAAGT,gBAAgB,CAACU,OAAjB,CAAyB,CAAzB,EAA4BC,WAAvD;AACA,QAAMC,IAAI,GAAGZ,gBAAgB,CAACa,IAA9B;AACA,QAAMC,OAAO,GAAGd,gBAAgB,CAACe,GAAjB,CAAqBD,OAArC;AACA,QAAME,IAAI,GAAI,mCAAkChB,gBAAgB,CAACU,OAAjB,CAAyB,CAAzB,EAA4BM,IAAK,MAAjF;AACA,QAAMC,IAAI,GAAGjB,gBAAgB,CAACiB,IAAjB,CAAsBC,KAAnC;AAEAjB,EAAAA,IAAI,CAACH,SAAL,GAAkB;AACpB;AACA;AACA;AACA,0CAA0CO,IAAK;AAC/C,iDAAiDI,kBAAmB;AACpE,8CAA8CG,IAAK,KAAIE,OAAQ;AAC/D,gDAAgDG,IAAK;AACrD;AACA;AACA,oBAAoBD,IAAK;AACzB;AACA;AACA,2CAA2CzB,KAAM;AACjD,0CAA0CD,IAAK;AAC/C,6CAA6CI,GAAI;AACjD;AACA;AACA;AACA,GAnBE;AAoBD,CArCM","file":"src.e31bb0bc.js","sourceRoot":"../src","sourcesContent":["const ApiConfig = {\n  api: \"https://api.openweathermap.org/data/2.5/weather\",\n  key: \"6d437af60d95ce61bbf6059e8904d4d8\",\n  units: \"metric\",\n};\n\nexport default ApiConfig;\n","import apiConfig from \"../apiConfig/apiConfig\";\n\nexport const fetchData = async (query) => {\n  const { api, key, units } = apiConfig;\n\n  try {\n    const res = await fetch(`${api}?q=${query}&units=${units}&appid=${key}`);\n\n    if (res.ok) {\n      const data = await res.json();\n\n      return data;\n    }\n    throw Error(\"City not found\");\n  } catch (e) {\n    return null;\n  }\n};\n","const debounce = (func, delay = 1000) => {\n  let timeoutId;\n  return (...args) => {\n    if (timeoutId) clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => {\n      func.apply(null, args);\n    }, delay);\n  };\n};\n\nexport default debounce;\n","const d = new Date();\n\nconst daysOfWeek = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\n\nconst months = [\n  \"jan\",\n  \"feb\",\n  \"mar\",\n  \"apr\",\n  \"may\",\n  \"jun\",\n  \"jul\",\n  \"aug\",\n  \"sep\",\n  \"oct\",\n  \"nov\",\n  \"dec\",\n];\n\nconst date = {\n  month: months[d.getMonth()],\n  date: d.getDate(),\n  day: daysOfWeek[d.getDay()],\n};\n\nexport default date;\n","import dateConfig from \"../date/date\";\n\nconst renderEmptyList = (el) => {\n  el.innerHTML = `\n  <div class=\"nothing\">Search for a city</div>\n`;\n};\n\nexport const displayData = async (cityForecastData = null) => {\n  const root = document.querySelector(\".content\");\n\n  if (cityForecastData === null) {\n    renderEmptyList(root);\n    return;\n  }\n\n  const { month, date, day } = dateConfig;\n\n  const temp = Math.round(cityForecastData.main.temp);\n  const weatherDescription = cityForecastData.weather[0].description;\n  const city = cityForecastData.name;\n  const country = cityForecastData.sys.country;\n  const icon = `http://openweathermap.org/img/w/${cityForecastData.weather[0].icon}.png`;\n  const wind = cityForecastData.wind.speed;\n\n  root.innerHTML = `\n  <div class=\"row\">\n    <div class=\"weather\">\n      <div class=\"weather__data\">\n        <div class=\"weather__data-temp\">${temp}&deg;</div>\n        <div class=\"weather__data-description\">${weatherDescription}</div>\n        <div class=\"weather__data-location\">${city}, ${country}</div>\n        <div class=\"weather__data-wind\">Wind: ${wind} mph</div>\n      </div>\n      <div class=\"weather__icon\">\n        <img src=\"${icon}\" alt=\"\" class=\"weather__icon-content\"></img>\n      </div>\n      <div class=\"weather__date\">\n        <div class=\"weather__date-month\">${month}</div>\n        <div class=\"weather__date-date\">${date}</div>\n        <div class=\"weather__date-weekday\">${day}</div>\n      </div>\n    </div>\n  </div>\n  `;\n};\n","import { fetchData } from \"../apiFetchData/apiFetchData\";\nimport debounce from \"../utils/debounce\";\nimport { displayData } from \"../components/searchResult\";\n\nconst searchBar = () => {\n  const searchInput = document.querySelector(\".search__input\");\n  const onInput = async (e) => {\n    const searchResult = await fetchData(e.target.value);\n    displayData(searchResult);\n  };\n  searchInput.addEventListener(\"input\", debounce(onInput, 500));\n};\n\ndisplayData();\nsearchBar();\n\nexport default searchBar;\n","import app from \"./js/searchBar/searchBar\";\n"]}